# ===============================
# n8n Docker Compose Deployment
#
# 1. Copy .env-example to .env.production and fill in your values:
#    cp .env-example .env.production
#
# 2. Create the external Docker network (if not already created):
#    docker network create infernet
#
# 3. Start the stack:
#    docker compose -f docker-compose.production.yaml up -d
#
# 4. Stop and remove the stack (containers only, data persists):
#    docker compose -f docker-compose.production.yaml down
# ===============================

version: '3.8'

services:
  n8n:
    image: n8nio/n8n:1.91.3
    restart: always
    # ports:
    #   - "5678:5678"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    networks:
      - infernet

  postgres:
    image: postgres:17.5
    restart: always
    env_file:
      - .env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - infernet

volumes:
  n8n_data:
    name: n8n_data
  postgres_data:
    name: postgres_data

networks:
  infernet:
    name: infernet
    external: true 